(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=b(n),u=r,m=l["".concat(i,".").concat(u)]||l[u]||d[u]||o;return n?a.a.createElement(m,s(s({ref:t},p),{},{components:n})):a.a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(123)),i={id:"overview",title:"Server Overview",slug:"/"},s={unversionedId:"overview",id:"overview",isDocsHomePage:!1,title:"Server Overview",description:"Grapevine is a fast, unopinionated, embeddable, minimalist web framework for .NET. Grapevine is not intended to be a replacement for IIS or ASP.NET, but rather to function as an embedded REST/HTTP server in non-ASP.NET projects.",source:"@site/docs\\gv-overview.md",slug:"/",permalink:"/grapevine/docs/",editUrl:"https://github.com/scottoffen/grapevine-docs/edit/master/docs/gv-overview.md",version:"current",sidebar:"someSidebar",next:{title:"Building The Rest Server",permalink:"/grapevine/docs/startup"}},c=[{value:"Inspiration",id:"inspiration",children:[]},{value:"Getting Started",id:"getting-started",children:[]}],p={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Grapevine is a fast, unopinionated, embeddable, minimalist web framework for .NET. Grapevine is not intended to be a replacement for IIS or ASP.NET, but rather to function as an embedded REST/HTTP server in non-ASP.NET projects."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Grapevine listens for incoming requests and routes them to specific functions and methods in your code"),Object(o.b)("li",{parentName:"ul"},"Grapevine can serve static HTML, JavaScript, CSS and images, as well as other static assets")),Object(o.b)("h2",{id:"inspiration"},"Inspiration"),Object(o.b)("p",null,"Grapevine is modeled after my experience using the popular Node.js library ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://expressjs.com/"}),"Express"),", which was itself inspired by the Ruby ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://sinatrarb.com/"}),"Sinatra")," library. When an incoming request is received, the request and response objects (collectively part of the ",Object(o.b)("inlineCode",{parentName:"p"},"IHttpContext")," object) gets routed to all matching routes until one of them sends a response - after which no more routes are invoked. If no matching routes are found, or if no route responds, then a ",Object(o.b)("inlineCode",{parentName:"p"},"Not Implemented")," response is sent."),Object(o.b)("h2",{id:"getting-started"},"Getting Started"),Object(o.b)("p",null,"Grapevine is easy to get started with."),Object(o.b)("p",null,"Create a simple route. This is the code that you want to run when a request comes in using the specificed HTTP verb and path. ",Object(o.b)("strong",{parentName:"p"},"Route methods must be ",Object(o.b)("a",Object(r.a)({parentName:"strong"},{href:"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/"}),"asynchronous"),"!")),Object(o.b)("p",null,"The only argument to your method is an ",Object(o.b)("inlineCode",{parentName:"p"},"IHttpContext")," object. This contains (among other things) the request and response objects. Since at least one of our route methods should respond to the request, we'll do that in this method."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'[RestResource]\npublic class MyResource\n{\n    [RestRoute("Get", "/api/test")]\n    public async Task Test(IHttpContext context)\n    {\n        await context.Response.SendResponseAsync("Successfully hit the test route!").ConfigureAwait(false);\n    }\n}\n')),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Consult ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://devblogs.microsoft.com/dotnet/configureawait-faq/"}),"this guide")," to see if ",Object(o.b)("inlineCode",{parentName:"p"},".ConfigureAwait(false)")," is right for you."))),Object(o.b)("p",null,"Next, create your first server using provided defaults with the ",Object(o.b)("inlineCode",{parentName:"p"},"RestServerBuilder")," class and start your server up!"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),'using (var server = RestServerBuilder.UseDefaults().Build())\n{\n    server.Start();\n\n    Console.WriteLine("Press enter to stop the server");\n    Console.ReadLine();\n}\n')),Object(o.b)("p",null,"Open your prefered browser and go to ",Object(o.b)("inlineCode",{parentName:"p"},"http://localhost:1234/api/test"),". You should see the following output in your browser:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Successfully hit the test route!\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Grapevine use ",Object(o.b)("inlineCode",{parentName:"p"},"Microsoft.Extensions.DependencyInjection")," for dependency injection and ",Object(o.b)("inlineCode",{parentName:"p"},"Microsoft.Extensions.Logging")," for logging. The default ",Object(o.b)("inlineCode",{parentName:"p"},"RestServer")," implementation is a wrapper for the ubiquitous ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/system.net.httplistener?view=net-5.0"}),Object(o.b)("inlineCode",{parentName:"a"},"HttpListener"))," class, although it is possible to create an implementation that does not have this dependency."))))}b.isMDXComponent=!0}}]);